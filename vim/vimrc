" -----------------------------------------------------------------------------
" General
" -----------------------------------------------------------------------------
set nocompatible " Disable Vi compatibility
let mapleader = ","
set shortmess+=I " Disable the default Vim startup message.
set mouse+=a " Enable mouse support.
set noerrorbells visualbell t_vb= " Disable audible bell because it's annoying.
set autowrite  "Save on buffer switch

" -----------------------------------------------------------------------------
" UI
" -----------------------------------------------------------------------------
if (has("termguicolors"))
 set termguicolors
endif

syntax enable " Turn on syntax highlighting.
colorscheme night-owl
let g:lightline = { 'colorscheme': 'nightowl' }

" Show line numbers.
set number
set numberwidth=4

" Always show the status line at the bottom, even if only have one window open.
set laststatus=2

" -----------------------------------------------------------------------------
" Text
" -----------------------------------------------------------------------------
" Configure backspace so it acts as it should act
set backspace=indent,eol,start

" Use spaces instead of tabs
set expandtab

" Be smart when using tabs ;)
set smarttab

" 1 tab == 4 spaces
set tabstop=4       " num of visual space per <TAB> char
set softtabstop=4   " num of spaces for TAB when editing, useful for backspace
set shiftwidth=4

" Indentation
set ai " Auto indent
set si " Smart indent

" Linebreak on 500 characters
set linebreak
set tw=500
set wrap " Wrap lines

" -----------------------------------------------------------------------------
" Key Bindings
" -----------------------------------------------------------------------------
" Unbind some useless/annoying default key bindings.
" 'Q' in normal mode enters Ex mode. You almost never want this.
nmap Q <Nop> 

" Try to prevent bad habits like using the arrow keys for movement.
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>
" ...and in insert mode
inoremap <Left>  <ESC>:echoe "Use h"<CR>
inoremap <Right> <ESC>:echoe "Use l"<CR>
inoremap <Up>    <ESC>:echoe "Use k"<CR>
inoremap <Down>  <ESC>:echoe "Use j"<CR>

" -----------------------------------------------------------------------------
" Buffer management
" -----------------------------------------------------------------------------
set hidden " Allow buffers to be hidden if you've modified a buffer
" Move to the next buffer
nmap <leader>l :bnext<CR>
" Move to the previous buffer
nmap <leader>h :bprevious<CR>

" Close the current buffer and move to the previous one
" This replicates the idea of closing a tab
nmap <leader>q :bp <BAR> bd #<CR>

" Show all open buffers and their status
nmap <leader>bl :ls<CR>

" -----------------------------------------------------------------------------
" Search
" -----------------------------------------------------------------------------
" Case-insensitive when all characters are lowercase.
" Case-sensitive if contains any capital letters.
set ignorecase
set smartcase
set hlsearch "Highlight search things
set incsearch "Search while typin
"doubly esc for clear search highlight
nnoremap <esc><esc> :noh<return>


" -----------------------------------------------------------------------------
" Fuzzy Find / Ctrl + P
" -----------------------------------------------------------------------------
set wildignore+=*/tmp/*,*.so,*.swp,*.zip 
set wildignore+=*/node_modules/**
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](\.(git|hg|svn)|\_site)$',
  \ 'file': '\v\.(exe|so|dll|class|png|jpg|jpeg)$',
\}

" Use the nearest .git|.svn|.hg|.bzr directory as the cwd
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'r'
" enter file search mode
nmap <leader>p :CtrlP<cr>  


" -----------------------------------------------------------------------------
" Airline
" -----------------------------------------------------------------------------
" let g:airline_theme='luna'
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#tabline#enabled = 1 " Enable the list of buffers
" let g:airline#extensions#tabline#fnamemod = ':t' " Show just the filename
let g:airline#extensions#hunks#enabled = 0
let g:airline#extensions#tabline#formatter = 'default'


" -----------------------------------------------------------------------------
" Nerd Tree
" -----------------------------------------------------------------------------
" Start NERDTree when Vim is started without file arguments.
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" Close the tab if NERDTree is the only window remaining in it.
autocmd BufEnter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
" open and close file tree
map <C-n> :NERDTreeToggle<CR>  
" open current buffer in file tree
nmap <leader>n :NERDTreeFind<CR>  

