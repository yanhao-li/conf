" -----------------------------------------------------------------------------
" General
" -----------------------------------------------------------------------------
set nocompatible " Disable Vi compatibility
let mapleader = ","
set shortmess+=I " Disable the default Vim startup message.
set mouse=a " Enable mouse support.
if !has('nvim')
	set ttymouse=xterm2
endif
set noerrorbells visualbell t_vb= " Disable audible bell because it's annoying.
set autowrite  "Save on buffer switch

" -----------------------------------------------------------------------------
" UI
" -----------------------------------------------------------------------------
if (has("termguicolors"))
	set termguicolors
endif

syntax enable " Turn on syntax highlighting.

" Show line numbers.
set number
set numberwidth=4

" Always show the status line at the bottom, even if only have one window open.
set laststatus=2

" Highlight trailing whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+\%#\@<!$/

" Show 'invisible' characters
set list
" Set characters used to indicate 'invisible' characters
set listchars=tab:→\ 
set listchars+=trail:·

" make the highlighting of tabs and other non-text less annoying
highlight SpecialKey ctermfg=19 guifg=#333333
highlight NonText ctermfg=19 guifg=#333333

" highlight current line
set cursorline

set colorcolumn=+1 " highlight column after 'textwidth'

" -----------------------------------------------------------------------------
" Text
" -----------------------------------------------------------------------------
" Configure backspace so it acts as it should act
set backspace=indent,eol,start

" Use tabs, not spaces
set noexpandtab

" Be smart when using tabs
set smarttab

" 1 tab == 8 spaces
set tabstop=8       " num of visual space per <TAB> char
set softtabstop=8   " num of spaces for ecah press of TAB when editing
set shiftwidth=8    " num of space for auto indents

" Indentation
set ai " Auto indent
set si " Smart indent

" Linebreak on 500 characters
set linebreak
set tw=80 " screen in 80 columns wide, wrap at 78
set wrap " Wrap lines

" -----------------------------------------------------------------------------
" Key Bindings
" -----------------------------------------------------------------------------
" Unbind some useless/annoying default key bindings.
" 'Q' in normal mode enters Ex mode. You almost never want this.
nmap Q <Nop>

" Try to prevent bad habits like using the arrow keys for movement.
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>
" ...and in insert mode
inoremap <Left>  <ESC>:echoe "Use h"<CR>
inoremap <Right> <ESC>:echoe "Use l"<CR>
inoremap <Up>    <ESC>:echoe "Use k"<CR>
inoremap <Down>  <ESC>:echoe "Use j"<CR>

" Windows

" Split window
nmap <Space> <C-w>w
nmap ss :split<Return><C-w>w
nmap sv :vsplit<Return><C-w>w
" Move cursor across window
map sh <C-w>h
map sk <C-w>k
map sj <C-w>j
map sl <C-w>l
" Resize window
nmap <C-w><left> <C-w><
nmap <C-w><right> <C-w>>
nmap <C-w><up> <C-w>+
nmap <C-w><down> <C-w>-

" -----------------------------------------------------------------------------
" Buffer management
" -----------------------------------------------------------------------------
set hidden " Allow buffers to be hidden if you've modified a buffer
" Move to the next buffer
nmap <leader>l :bnext<CR>
" Move to the previous buffer
nmap <leader>h :bprevious<CR>

" Close the current buffer and move to the previous one
" This replicates the idea of closing a tab
nmap <leader>q :bp <BAR> bd #<CR>

" Show all open buffers and their status
nmap <leader>bl :ls<CR>

" -----------------------------------------------------------------------------
" Search
" -----------------------------------------------------------------------------
" Case-insensitive when all characters are lowercase.
" Case-sensitive if contains any capital letters.
set ignorecase
set smartcase
set hlsearch "Highlight search things
set incsearch "Search while typin
"doubly esc for clear search highlight
nnoremap <esc><esc> :noh<return>
